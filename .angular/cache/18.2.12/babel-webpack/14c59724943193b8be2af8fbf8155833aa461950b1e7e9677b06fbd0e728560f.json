{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RequestsService {\n  constructor(service) {\n    this.service = service;\n    this.base = `https://swapi.dev/api`;\n  }\n  headers() {\n    const header = {};\n    return new HttpHeaders(header);\n  }\n  getListFilms() {\n    const requestHeaders = this.headers();\n    return this.service.get(`${this.base}/films`, {\n      headers: requestHeaders\n    });\n  }\n  getListPeople() {\n    const requestHeaders = this.headers();\n    return this.service.get(`${this.base}/people`, {\n      headers: requestHeaders\n    });\n  }\n  getListPlanets() {\n    const requestHeaders = this.headers();\n    return this.service.get(`${this.base}/planets`, {\n      headers: requestHeaders\n    });\n  }\n  getListVeicles() {\n    const requestHeaders = this.headers();\n    return this.service.get(`${this.base}/vehicles`, {\n      headers: requestHeaders\n    });\n  }\n  getFilmByUrl(url) {\n    const requestHeaders = this.headers();\n    return this.service.get(url, {\n      headers: requestHeaders\n    });\n  }\n  getCharacterByUrl(url) {\n    const requestHeaders = this.headers();\n    return this.service.get(url, {\n      headers: requestHeaders\n    });\n  }\n  static {\n    this.ɵfac = function RequestsService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RequestsService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: RequestsService,\n      factory: RequestsService.ɵfac,\n      providedIn: \"root\"\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","RequestsService","constructor","service","base","headers","header","getListFilms","requestHeaders","get","getListPeople","getListPlanets","getListVeicles","getFilmByUrl","url","getCharacterByUrl","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/bianca/Documents/GitHub/flow-bridge/src/app/requests.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class RequestsService {\n\tbase = `https://swapi.dev/api`;\n\n\tconstructor(private service: HttpClient) { }\n\n\theaders() {\n\t\tconst header: any = {};\n\t\treturn new HttpHeaders(header);\n\t}\n\n\tgetListFilms(): any {\n\t\tconst requestHeaders = this.headers();\n\t\treturn this.service.get<any>(`${this.base}/films`, {\n\t\t\theaders: requestHeaders,\n\t\t})\n\t}\n\tgetListPeople(): any {\n\t\tconst requestHeaders = this.headers();\n\t\treturn this.service.get<any>(`${this.base}/people`, {\n\t\t\theaders: requestHeaders,\n\t\t})\n\t}\n\tgetListPlanets(): any {\n\t\tconst requestHeaders = this.headers();\n\t\treturn this.service.get<any>(`${this.base}/planets`, {\n\t\t\theaders: requestHeaders,\n\t\t})\n\t}\n\tgetListVeicles(): any {\n\t\tconst requestHeaders = this.headers();\n\t\treturn this.service.get<any>(`${this.base}/vehicles`, {\n\t\t\theaders: requestHeaders,\n\t\t})\n\t}\n\n\tgetFilmByUrl(url: string): any {\n\t\tconst requestHeaders = this.headers();\n\t\treturn this.service.get<any>(url, {\n\t\t\theaders: requestHeaders,\n\t\t})\n\t}\n\tgetCharacterByUrl(url: string): any {\n\t\tconst requestHeaders = this.headers();\n\t\treturn this.service.get<any>(url, {\n\t\t\theaders: requestHeaders,\n\t\t})\n\t}\n}\n\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,eAAe;EAG3BC,YAAoBC,OAAmB;IAAnB,KAAAA,OAAO,GAAPA,OAAO;IAF3B,KAAAC,IAAI,GAAG,uBAAuB;EAEa;EAE3CC,OAAOA,CAAA;IACN,MAAMC,MAAM,GAAQ,EAAE;IACtB,OAAO,IAAIN,WAAW,CAACM,MAAM,CAAC;EAC/B;EAEAC,YAAYA,CAAA;IACX,MAAMC,cAAc,GAAG,IAAI,CAACH,OAAO,EAAE;IACrC,OAAO,IAAI,CAACF,OAAO,CAACM,GAAG,CAAM,GAAG,IAAI,CAACL,IAAI,QAAQ,EAAE;MAClDC,OAAO,EAAEG;KACT,CAAC;EACH;EACAE,aAAaA,CAAA;IACZ,MAAMF,cAAc,GAAG,IAAI,CAACH,OAAO,EAAE;IACrC,OAAO,IAAI,CAACF,OAAO,CAACM,GAAG,CAAM,GAAG,IAAI,CAACL,IAAI,SAAS,EAAE;MACnDC,OAAO,EAAEG;KACT,CAAC;EACH;EACAG,cAAcA,CAAA;IACb,MAAMH,cAAc,GAAG,IAAI,CAACH,OAAO,EAAE;IACrC,OAAO,IAAI,CAACF,OAAO,CAACM,GAAG,CAAM,GAAG,IAAI,CAACL,IAAI,UAAU,EAAE;MACpDC,OAAO,EAAEG;KACT,CAAC;EACH;EACAI,cAAcA,CAAA;IACb,MAAMJ,cAAc,GAAG,IAAI,CAACH,OAAO,EAAE;IACrC,OAAO,IAAI,CAACF,OAAO,CAACM,GAAG,CAAM,GAAG,IAAI,CAACL,IAAI,WAAW,EAAE;MACrDC,OAAO,EAAEG;KACT,CAAC;EACH;EAEAK,YAAYA,CAACC,GAAW;IACvB,MAAMN,cAAc,GAAG,IAAI,CAACH,OAAO,EAAE;IACrC,OAAO,IAAI,CAACF,OAAO,CAACM,GAAG,CAAMK,GAAG,EAAE;MACjCT,OAAO,EAAEG;KACT,CAAC;EACH;EACAO,iBAAiBA,CAACD,GAAW;IAC5B,MAAMN,cAAc,GAAG,IAAI,CAACH,OAAO,EAAE;IACrC,OAAO,IAAI,CAACF,OAAO,CAACM,GAAG,CAAMK,GAAG,EAAE;MACjCT,OAAO,EAAEG;KACT,CAAC;EACH;;;uCA9CYP,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAflB,eAAe;MAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;MAAAC,UAAA,EAFf;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}