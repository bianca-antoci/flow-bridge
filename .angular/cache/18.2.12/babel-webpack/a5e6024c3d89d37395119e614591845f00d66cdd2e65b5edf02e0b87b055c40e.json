{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavigationComponent } from './features/navigation/navigation.component';\nimport { HeaderComponent } from './features/header/header.component';\nimport { TableListComponent } from './features/table-list/table-list.component';\nimport { MapsComponent } from './features/maps/maps.component';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ClientSideRowModelModule, ModuleRegistry } from 'ag-grid-community';\nimport { FormsModule } from '@angular/forms';\nimport { GoogleMapsModule } from '@angular/google-maps';\nimport * as i0 from \"@angular/core\";\nModuleRegistry.registerModules([ClientSideRowModelModule]);\nexport class AppModule {\n  static {\n    this.ɵfac = function AppModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AppModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [BrowserModule, AppRoutingModule, HttpClientModule, AgGridModule, FormsModule, GoogleMapsModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, NavigationComponent, HeaderComponent, TableListComponent, MapsComponent],\n    imports: [BrowserModule, AppRoutingModule, HttpClientModule, AgGridModule, FormsModule, GoogleMapsModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","HttpClientModule","AppRoutingModule","AppComponent","NavigationComponent","HeaderComponent","TableListComponent","MapsComponent","AgGridModule","ClientSideRowModelModule","ModuleRegistry","FormsModule","GoogleMapsModule","registerModules","AppModule","bootstrap","declarations","imports"],"sources":["/Users/bianca/Documents/GitHub/flow-bridge/src/app/app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavigationComponent } from './features/navigation/navigation.component';\nimport { HeaderComponent } from './features/header/header.component';\nimport { TableListComponent } from './features/table-list/table-list.component';\nimport { MapsComponent } from './features/maps/maps.component';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ClientSideRowModelModule, ModuleRegistry } from 'ag-grid-community';\nimport { FormsModule } from '@angular/forms';\nimport { GoogleMapsModule } from '@angular/google-maps';\n\nModuleRegistry.registerModules([ClientSideRowModelModule]);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    HeaderComponent,\n    TableListComponent,\n    MapsComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AgGridModule,\n    FormsModule,\n\t\tGoogleMapsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}"],"mappings":"AACA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,mBAAmB,QAAQ,4CAA4C;AAChF,SAASC,eAAe,QAAQ,oCAAoC;AACpE,SAASC,kBAAkB,QAAQ,4CAA4C;AAC/E,SAASC,aAAa,QAAQ,gCAAgC;AAC9D,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,wBAAwB,EAAEC,cAAc,QAAQ,mBAAmB;AAC5E,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,gBAAgB,QAAQ,sBAAsB;;AAEvDF,cAAc,CAACG,eAAe,CAAC,CAACJ,wBAAwB,CAAC,CAAC;AAsB1D,OAAM,MAAOK,SAAS;;;uCAATA,SAAS;IAAA;EAAA;;;YAATA,SAAS;MAAAC,SAAA,GAFRZ,YAAY;IAAA;EAAA;;;gBARtBH,aAAa,EACbE,gBAAgB,EAChBD,gBAAgB,EAChBO,YAAY,EACZG,WAAW,EACbC,gBAAgB;IAAA;EAAA;;;2EAKLE,SAAS;IAAAE,YAAA,GAlBlBb,YAAY,EACZC,mBAAmB,EACnBC,eAAe,EACfC,kBAAkB,EAClBC,aAAa;IAAAU,OAAA,GAIbjB,aAAa,EACbE,gBAAgB,EAChBD,gBAAgB,EAChBO,YAAY,EACZG,WAAW,EACbC,gBAAgB;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}